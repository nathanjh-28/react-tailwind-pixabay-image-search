{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","idx","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNA0BeA,EAxBG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACXC,EAAOD,EAAMC,KAAKC,MAAM,KAC9B,OACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,UAAUH,UAAU,WACtD,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,yCAAf,sBACcH,EAAMO,QAEpB,+BACI,+BAAI,6CAAyBP,EAAMQ,SACnC,+BAAI,iDAA6BR,EAAMS,aACvC,+BAAI,6CAAyBT,EAAMU,eAG3C,qBAAKP,UAAU,YAAf,SACKF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACN,uBAAgBV,UAAU,2FAA1B,cAAuHS,IAA5GC,YCYhBC,EA7BK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACZC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,KASpC,OACI,qBAAKf,UAAU,iDAAf,SACI,sBACIgB,SATK,SAACC,GACdA,EAAEC,iBACFN,EAAWE,IAQHd,UAAU,kBAFd,SAGI,sBAAKA,UAAU,6DAAf,UACI,uBACImB,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAChCrB,UAAU,kHAAkHsB,KAAK,OAAOC,YAAY,yBACxJ,wBACIvB,UAAU,kIACVsB,KAAK,SAFT,4BCcLE,MA9Bf,WAAgB,IAAD,EACeX,mBAAS,IADxB,mBACNY,EADM,KACEC,EADF,OAEqBb,oBAAS,GAF9B,mBAENc,EAFM,KAEKC,EAFL,OAGWf,mBAAS,IAHpB,mBAGNgB,EAHM,KAGAC,EAHA,KAgBb,OAVAC,qBAAU,WACRC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,sBACFK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACX,IAGF,sBAAK7B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaY,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OACzCa,GAA+B,IAAlBF,EAAOkB,QAAgB,oBAAI3C,UAAU,qCAAd,6BACrC2B,EAAY,oBAAI3B,UAAU,qCAAd,wBAAqE,qBAAKA,UAAU,yBAAf,SAC/EyB,EAAOjB,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM+C,aCrBhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.96a0befc.chunk.js","sourcesContent":["import React from 'react'\n\nconst ImageCard = ({ image }) => {\n    const tags = image.tags.split(',');\n    return (\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\n            <img src={image.webformatURL} alt=\"picture\" className=\"w-full\" />\n            <div className=\"px-6 py-4\">\n                <div className=\"font-bold text-purple-500 text-xl mb-2\">\n                    Photo by {image.user}\n                </div>\n                <ul>\n                    <li><strong>Views: </strong>{image.views}</li>\n                    <li><strong>Downloads: </strong>{image.downloads}</li>\n                    <li><strong>Likes: </strong>{image.likes}</li>\n                </ul>\n            </div>\n            <div className=\"px-6 py-4\">\n                {tags.map((tag, idx) => (\n                    <span key={idx} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">#{tag}</span>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default ImageCard;\n","import React, { useState } from 'react';\n\nconst ImageSearch = ({ searchText }) => {\n    const [text, setText] = useState('');\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        searchText(text);\n    }\n\n\n    return (\n        <div className='max-w-sm rounded overflow-hidden my-10 mx-auto'>\n            <form\n                onSubmit={onSubmit}\n                className=\"w-full max-w-sm\">\n                <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\n                    <input\n                        onChange={e => setText(e.target.value)}\n                        className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" placeholder=\"Search Image Term...\" />\n                    <button\n                        className=\"flex-shrink-0 bg-blue-500 hover:bg-blue-700 border-blue-500 hover:border-blue-700 text-sm border-4 text-white py-1 px-2 rounded\"\n                        type=\"submit\">\n                        Search\n                        </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ImageSearch;\n","import React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard'\nimport ImageSearch from './components/ImageSearch'\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo`)\n      .then(res => res.json())\n      .then(data => {\n        setImages(data.hits);\n        setIsLoading(false);\n      })\n      .catch(err => console.log(err))\n  }, [term])\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={(text) => setTerm(text)} />\n      {!isLoading && images.length === 0 && <h1 className=\"text-5xl text-center mx-auto mt-32\">No Images Found</h1>}\n      {isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1> : <div className=\"grid grid-cols-3 gap-4\">\n        {images.map(image => (\n          <ImageCard key={image.id} image={image} />\n        ))}\n      </div>}\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}